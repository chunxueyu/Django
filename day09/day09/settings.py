"""
Django settings for day09 project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'eak&)%h-u+fjl((8_p@@z%+1wqg5rdryt*mx@t88y2v78dbdi5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app9',
    'djcelery'
]

# celery配置
import djcelery
djcelery.setup_loader()
BROKER_URL='redis://localhost:6379/1'   # 消息队列使用的库
CELERY_CONCURRENCY=2          #（设置worker的并发数量）
CELERY_RESULT_BACKEND = 'redis://localhost:6379/2'  # backend使用的库

from datetime import timedelta
CELERYBEAT_SCHEDULE = {
"every-5-seconds-run-test":{
    'task':"app9.tasks.test",
    'schedule':timedelta(seconds=5),
    'args':(2,)
}
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware'
]

ROOT_URLCONF = 'day09.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,"htmls")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'day09.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'dj09',
        'POST': 3306,
        'HOST': "39.106.9.111",
        'USER': os.environ.get("DBUSER"),
        'PASSWORD': os.environ.get("DBPWD"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# 邮箱配置
EMAIL_USE_SSL = True

EMAIL_HOST = 'smtp.163.com'  # 如果是 163 改成 smtp.163.com

EMAIL_PORT = 465

# EMAIL_HOST_USER = "yce1001@163.com" # 帐号
#
# EMAIL_HOST_PASSWORD = "yuchengen123"  # 授权码（****）

EMAIL_HOST_USER = "asdxue19951006@163.com" # 帐号

EMAIL_HOST_PASSWORD = "zxcv1234"  # 授权码（****）


DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

EMAIL_BACKEND ='django.core.mail.backends.smtp.EmailBackend'

SERVER_EMAIL=EMAIL_HOST_USER

ADMINS = (
    ('xkk', '2579382820@qq.com'),
)
#
# LOGGING = {
#    'version': 1,
#    'disable_existing_loggers': False,
#    'formatters': {
#        # 设置输出格式的模块
#    'standard': {
#     'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'},
#        "easy":{
#            'format':'[%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'
#        }
#    },
#    'filters': {
#        # 设置过滤条件
#    'require_debug_false': {
#     '()': 'django.utils.log.RequireDebugFalse',
#     },
#     'require_debug_true': {
#         '()': 'django.utils.log.RequireDebugTrue',
#         }
#    },
#    'handlers': {
#    'null': {
#     'level': 'DEBUG',
#     'class': 'logging.NullHandler',
#    },
#    'mail_admins': {
#     'level': 'ERROR',
#     'class': 'django.utils.log.AdminEmailHandler',
#     'filters': ['require_debug_true'],
#    },
#    'debug': {
#     'level':'DEBUG',
#     'class':'logging.handlers.RotatingFileHandler',
#     'filename': os.path.join(BASE_DIR, "log",'debug.log'), #文件路径
#     'maxBytes':1024*1024*5,  # 5m数据
#     'backupCount': 5,   # 存文件的个数
#     'formatter':'easy',
#    },
#    'console':{
#     'level': 'DEBUG',
#     'class': 'logging.StreamHandler',
#     'formatter': 'standard',
#    },
#    },
#    'loggers': {
#        't09':{
#          'handlers':['debug'],
#            'level':'INFO',
#            'propagate':True
#        },
#    'django': {
#     'handlers': ['console'],
#     'level': 'DEBUG',
#     'propagate': False
#    },
#    'django.request': {
#     'handlers': ['debug','mail_admins'],  # 监听所有的d'jang'o请求  一旦出现error错误  那么日志会被输出到我们文件  同时发邮件给开发者
#     'level': 'ERROR',
#     'propagate': True,  #是否继承父类的log信息
#    },
#    # 对于不在 ALLOWED_HOSTS 中的请求不发送报错邮件
#    'django.security.DisallowedHost': {
#     'handlers': ['null'],
#     'propagate': False,
#    },
#    }
#   }

